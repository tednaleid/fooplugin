buildscript {
    ext {
      grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "http://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.0.20'
    }
}

plugins {
    id "io.spring.dependency-management" version "0.3.1.RELEASE"
    id "com.jfrog.bintray" version "1.1" 
}

apply plugin: "spring-boot"
apply plugin: "asset-pipeline"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-gsp"
apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'

ext {
  grailsVersion = project.grailsVersion
  gradleWrapperVersion = project.gradleWrapperVersion
}

version "0.1"
group "org.grails.plugins"
sourceCompatibility = 1.7
targetCompatibility = 1.7


repositories {
  mavenLocal()
  mavenCentral()
  maven { url "http://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

bintray {
    user = System.getenv("BINTRAY_USER") ?: project.hasProperty("bintrayUser") ? project.bintrayUser : '' 
    key = System.getenv("BINTRAY_KEY") ?: project.hasProperty("bintrayKey") ? project.bintrayKey : '' 
    publications = ['maven']
    pkg {
        repo = 'testrepo'
        userOrg = 'tednaleid'
        name = "com.naleid.plugins:$project.name"
        desc = "Grails $project.name plugin"
        websiteUrl = "http://grails.org/plugin/${project.name}"
        issueTrackerUrl = "https://github.com/tednaleid/${project.name}/issues"
        vcsUrl = "https://github.com/tednaleid/${project.name}"
        licenses = ['Apache-2.0']
        publicDownloadNumbers = true
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId "${project.name}"
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name "${project.name}" 
                    description "Grails ${project.name} plugin"
                    url "https://github.com/tednaleid/${project.name}"
                    scm {
                        url "https://github.com/tednaleid/${project.name}"
                        connection "scm:https://github.com/tednaleid/${project.name}.git"
                        developerConnection "scm:https://github.com/tednaleid/${project.name}.git"
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/license/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'tednaleid'
                            name 'Ted Naleid'
                            email 'contact@naleid.com'
                        }
                    }
                }
            }
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintrayUpload.dependsOn build, sourcesJar, javadocJar

dependencies {
  provided 'org.springframework.boot:spring-boot-starter-logging'
  provided "org.springframework.boot:spring-boot-starter-actuator"
  provided "org.springframework.boot:spring-boot-autoconfigure"
  provided "org.springframework.boot:spring-boot-starter-tomcat"

  provided "org.grails:grails-web-boot"
  provided "org.grails:grails-dependencies"
  provided 'javax.servlet:javax.servlet-api:3.1.0'

  testCompile "org.grails:grails-plugin-testing"

  console "org.grails:grails-console"
}

eclipse {
    classpath {
        plusConfigurations += [configurations.provided]
    }
}

idea {
    module {
        scopes.PROVIDED.plus += [configurations.provided]
    }
}

task wrapper(type: Wrapper) {
  gradleVersion = gradleWrapperVersion
}
